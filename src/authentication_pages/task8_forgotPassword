import { useState } from "react";
import "./LoginPage.css";
import {useNavigate} from "react-router-dom";

const LoginPage=()=>{
    const [form ,setForm]=useState({
        email:"",
        password:""
    });
    const [resetEmail, setResetEmail] = useState("");
  const [showReset, setShowReset] = useState(false);
  const [loading, setLoading] = useState(false);
    const navigate = useNavigate();

    const API_KEY =  "AIzaSyCtwLDyIgie3wiULpZiBj8FP6cFbJ3QSqs";
    const handleChange=(event)=>{
        const{name,value}=event.target;
        setForm({...form,[name]:value});
    };

    const handleSubmit=async(event)=>{
        event.preventDefault();
        try{
            const response=await fetch(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`,
                {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({
                    email: form.email,
                    password: form.password,
                    returnSecureToken: true
                    })
                }
                );
            const data=await response.json()
            if(data.error){
                alert("No data, please signup first",data.error.message);
                return;
                }
                
                alert("login success");
                localStorage.setItem("idToken", data.idToken);
                localStorage.setItem("userEmail", form.email);
                navigate("/expensePage");
            }catch(error){
                console.log(error);
                alert("try again");
            }
    };
    const handleForgotPassword=async()=>{
            if(!resetEmail){
                alert("enter email");
                return;
            }
            setLoading(true);
        try{
            const response=await fetch(`https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=${API_KEY}`,
            {
                method:"POST",
                headers:{"Content-Type":"application/json"},
                body:JSON.stringify({
                    requestType:"PASSWORD_RESET",
                    email:resetEmail,
                }),
            });
            const data=await response.json();
            if(data.error){
                alert("error"+data.error.message);
                return;
            }
            alert("Password reset email sent , check");
            setResetEmail(""); 
            setShowReset(false);
            navigate("/login");
        }catch(error){
            setLoading(false);
            console.log(error);
            alert("something wrong");
        }
    };

    return(
        <div className="container">
            <div className="page_body">
                <div className="login_layout">
                    <h3 className="head_text">Login</h3>
                    {!showReset ? (
                    <form onSubmit={handleSubmit} >
                        <input type="email"
                        id="email"
                        name="email"
                        placeholder="Email"
                        value={form.email}
                        onChange={handleChange}
                        className="email_field"
                        required
                        />
                        <input type="password"
                        id="password"
                        name="password"
                        placeholder="Password"
                        value={form.password}
                        onChange={handleChange}
                        className="password_field"
                        required
                        />
                        <button type="submit" className="loginPage_btn">Login</button>
                        <a href="/" className="forgot_link" onClick={(e) => { e.preventDefault(); setShowReset(true);}}>Forgot Password</a>
                    </form>
                    ) : (
            
            <form onSubmit={handleForgotPassword}>
              <input
                type="email"
                placeholder="Enter your email"
                value={resetEmail}
                onChange={(e) => setResetEmail(e.target.value)}
                className="email_field"
                required
              />
              <button type="submit" className="loginPage_btn" disabled={loading}>
                {loading ? "Sending..." : "Send Link"}
              </button>
            </form>
          )}
                </div>
            </div>
            <button type="button" className="Signup_button" onClick={()=>navigate("/signup")}>Don't have an Account?Sign up</button>
        </div>
    );
};
export default LoginPage;
